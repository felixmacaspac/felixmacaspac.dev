---
import { socialLinks } from '../../data/social-links.js';

const { id, className = '' } = Astro.props;
---

<footer id={id} class={`max-w-2xl mx-auto px-6 pb-20 ${className}`}>
  <h2 class="footer-item opacity-0 translate-y-4 transition-all duration-700 ease-out text-sm font-semibold mb-6" data-index="0">elsewhere</h2>
  
  <div class="footer-item opacity-0 translate-y-4 transition-all duration-700 ease-out flex flex-wrap gap-x-2 gap-y-2 text-sm" data-index="1">
    {socialLinks.map((link, index) => (
      <>
        <a 
          href={link.href}
          class="text-zinc-400 transition-colors hover:text-white"
          target="_blank"
          rel="noopener noreferrer"
        >
          {link.name}
        </a>
        {index < socialLinks.length - 1 && (
          <span class="text-zinc-500 last:hidden">·</span>
        )}
      </>
    ))}
  </div>
  
  <p class="footer-item opacity-0 translate-y-4 transition-all duration-700 ease-out text-xs text-zinc-400 mt-12" data-index="2">
    © {new Date().getFullYear()} · Created with ♥︎ by Felix Macaspac.
  </p>
</footer>

<script>
  function initFooterAnimations() {
    const observer = new IntersectionObserver((entries) => {
      entries.forEach((entry) => {
        if (entry.isIntersecting) {
          const item = entry.target as HTMLElement;
          const index = parseInt(item.getAttribute('data-index') || '0');
          
          setTimeout(() => {
            item.classList.remove('opacity-0', 'translate-y-4');
            item.classList.add('opacity-100', 'translate-y-0');
          }, index * 150);
          
          observer.unobserve(item);
        }
      });
    }, {
      threshold: 0.1,
      rootMargin: '0px 0px -50px 0px'
    });

    document.querySelectorAll('.footer-item').forEach((item) => {
      observer.observe(item);
    });
  }

  if (document.readyState === 'loading') {
    document.addEventListener('DOMContentLoaded', initFooterAnimations);
  } else {
    initFooterAnimations();
  }
</script>
